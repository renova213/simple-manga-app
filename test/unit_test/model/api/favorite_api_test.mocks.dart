// Mocks generated by Mockito 5.1.0 from annotations
// in manga_time/test/unit_test/model/api/favorite_api_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:manga_time/models/favorite_model/favorite_api/favorite_api.dart'
    as _i2;
import 'package:manga_time/models/favorite_model/favorite_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [FavoriteApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteApi extends _i1.Mock implements _i2.FavoriteApi {
  MockFavoriteApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<dynamic> postFavoriteKomik({_i4.FavoriteModel? postfavorite}) =>
      (super.noSuchMethod(
          Invocation.method(
              #postFavoriteKomik, [], {#postfavorite: postfavorite}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<List<_i4.FavoriteModel>> getFavorite() =>
      (super.noSuchMethod(Invocation.method(#getFavorite, []),
              returnValue:
                  Future<List<_i4.FavoriteModel>>.value(<_i4.FavoriteModel>[]))
          as _i3.Future<List<_i4.FavoriteModel>>);
  @override
  _i3.Future<dynamic> deleteFavorite({dynamic key}) =>
      (super.noSuchMethod(Invocation.method(#deleteFavorite, [], {#key: key}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
}
